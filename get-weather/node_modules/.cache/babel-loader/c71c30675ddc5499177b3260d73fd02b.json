{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\TTT\\\\Desktop\\\\Get Weather App\\\\get-weather\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nvar API_KEY = \"8abc2d76250082284d0f78bd630d8781\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      presure: undefined,\n      error: undefined\n    };\n\n    _this.gettingWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, url, data, sunset, dateS, sunset_date, sunrise, dateR, sunrise_date;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n\n                if (!city) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?city=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 5:\n                url = _context.sent;\n                _context.next = 8;\n                return url.json;\n\n              case 8:\n                data = _context.sent;\n                sunset = data.sys.sunset;\n                dateS = new Date();\n                date.setTime(sunset);\n                sunset_date = dateS.getHours() + \":\" + dateS.getMinutes() + \":\" + dateS.getSeconds();\n                sunrise = data.sys.sunrise;\n                dateR = new Date();\n                date.setTime(sunrise);\n                sunrise_date = dateR.getHours() + \":\" + dateR.getMinutes() + \":\" + dateR.getSeconds();\n\n                _this.setState({\n                  temp: data.main.temp,\n                  city: data.name,\n                  country: data.sys.country,\n                  presure: data.main.presure,\n                  sunrise: sunrise_date,\n                  sunset: sunset_date,\n                  error: \"\"\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Form, {\n        weatherMethod: this.gettingWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temp: this.state.temp,\n        city: this.state.city,\n        country: this.state.country,\n        presure: this.state.presure,\n        sunrise: this.state.sunrise,\n        sunset: this.state.sunset,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\TTT\\Desktop\\Get Weather App\\get-weather\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","state","temp","undefined","city","country","sunrise","sunset","presure","error","gettingWeather","e","preventDefault","target","elements","value","fetch","url","json","data","sys","dateS","Date","date","setTime","sunset_date","getHours","getMinutes","getSeconds","dateR","sunrise_date","setState","main","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Info from \"./components/info\"\nimport Form from \"./components/form\"\nimport Weather from \"./components/weather\"\n\nconst API_KEY = \"8abc2d76250082284d0f78bd630d8781\";\n\nclass App extends React.Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    presure: undefined,\n    error: undefined   \n  }\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    \n    \n    if(city) {\n      const url = await\n      fetch(`https://api.openweathermap.org/data/2.5/weather?city=${city}&appid=${API_KEY}&units=metric`);\n      const data = await url.json;\n\n      var sunset = data.sys.sunset;\n      var dateS = new Date();\n      date.setTime(sunset);\n      var sunset_date = dateS.getHours() + \":\" + dateS.getMinutes() + \":\" + dateS.getSeconds();\n      var sunrise = data.sys.sunrise;\n      var dateR = new Date();\n      date.setTime(sunrise);\n      var sunrise_date = dateR.getHours() + \":\" + dateR.getMinutes() + \":\" + dateR.getSeconds();\n\n      this.setState ({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        presure: data.main.presure,\n        sunrise: sunrise_date,       \n        sunset: sunset_date,\n        error: \"\"\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Info />\n        <Form weatherMethod={this.gettingWeather}/>\n        <Weather \n          temp = {this.state.temp}\n          city = {this.state.city}\n          country = {this.state.country}\n          presure = {this.state.presure}\n          sunrise = {this.state.sunrise}\n          sunset = {this.state.sunset}\n          error = {this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}